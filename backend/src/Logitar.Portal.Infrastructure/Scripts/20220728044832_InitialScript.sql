CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE "Events" (
    "Sid" bigint GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
    "OccurredAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "UserId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    "EventType" character varying(256) NOT NULL,
    "EventData" jsonb NOT NULL,
    "AggregateType" character varying(256) NOT NULL,
    "AggregateId" uuid NOT NULL,
    CONSTRAINT "PK_Events" PRIMARY KEY ("Sid")
);

CREATE TABLE "Realms" (
    "Sid" integer GENERATED BY DEFAULT AS IDENTITY,
    "Alias" character varying(256) NOT NULL,
    "AliasNormalized" character varying(256) NOT NULL,
    "Name" character varying(256) NOT NULL,
    "Description" text NULL,
    "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "CreatedById" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    "UpdatedAt" timestamp with time zone NULL,
    "UpdatedById" uuid NULL,
    "Version" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_Realms" PRIMARY KEY ("Sid")
);

CREATE TABLE "Users" (
    "Sid" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmSid" integer NULL,
    "Username" character varying(256) NOT NULL,
    "UsernameNormalized" character varying(256) NOT NULL,
    "PasswordHash" text NULL,
    "Email" character varying(256) NULL,
    "EmailNormalized" character varying(256) NULL,
    "EmailConfirmed" timestamp with time zone NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" timestamp with time zone NULL,
    "FirstName" character varying(128) NULL,
    "MiddleName" character varying(128) NULL,
    "LastName" character varying(128) NULL,
    "Locale" character varying(16) NULL,
    "Picture" character varying(2048) NULL,
    "PasswordChangedAt" timestamp with time zone NULL,
    "SignedInAt" timestamp with time zone NULL,
    "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "CreatedById" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    "UpdatedAt" timestamp with time zone NULL,
    "UpdatedById" uuid NULL,
    "Version" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Sid"),
    CONSTRAINT "FK_Users_Realms_RealmSid" FOREIGN KEY ("RealmSid") REFERENCES "Realms" ("Sid")
);

CREATE TABLE "Sessions" (
    "Sid" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserSid" integer NOT NULL,
    "KeyHash" text NULL,
    "IsPersistent" boolean NOT NULL DEFAULT FALSE,
    "SignedOutAt" timestamp with time zone NULL,
    "SignedOutById" uuid NULL,
    "IsActive" boolean NOT NULL DEFAULT FALSE,
    "IpAddress" character varying(40) NULL,
    "AdditionalInformation" jsonb NULL,
    "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "CreatedById" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    "UpdatedAt" timestamp with time zone NULL,
    "UpdatedById" uuid NULL,
    "Version" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_Sessions" PRIMARY KEY ("Sid"),
    CONSTRAINT "FK_Sessions_Users_UserSid" FOREIGN KEY ("UserSid") REFERENCES "Users" ("Sid") ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_Events_Id" ON "Events" ("Id");

CREATE INDEX "IX_Realms_Alias" ON "Realms" ("Alias");

CREATE UNIQUE INDEX "IX_Realms_AliasNormalized" ON "Realms" ("AliasNormalized");

CREATE UNIQUE INDEX "IX_Realms_Id" ON "Realms" ("Id");

CREATE INDEX "IX_Realms_Name" ON "Realms" ("Name");

CREATE UNIQUE INDEX "IX_Sessions_Id" ON "Sessions" ("Id");

CREATE INDEX "IX_Sessions_UserSid" ON "Sessions" ("UserSid");

CREATE INDEX "IX_Users_Email" ON "Users" ("Email");

CREATE INDEX "IX_Users_EmailNormalized" ON "Users" ("EmailNormalized");

CREATE INDEX "IX_Users_FirstName" ON "Users" ("FirstName");

CREATE UNIQUE INDEX "IX_Users_Id" ON "Users" ("Id");

CREATE INDEX "IX_Users_LastName" ON "Users" ("LastName");

CREATE INDEX "IX_Users_MiddleName" ON "Users" ("MiddleName");

CREATE INDEX "IX_Users_PhoneNumber" ON "Users" ("PhoneNumber");

CREATE UNIQUE INDEX "IX_Users_RealmSid_UsernameNormalized" ON "Users" ("RealmSid", "UsernameNormalized");

CREATE INDEX "IX_Users_Username" ON "Users" ("Username");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220727033212_InitialMigration', '6.0.7');

COMMIT;

START TRANSACTION;

CREATE TABLE "ApiKeys" (
    "Sid" integer GENERATED BY DEFAULT AS IDENTITY,
    "KeyHash" text NOT NULL,
    "Name" character varying(256) NOT NULL,
    "Description" text NULL,
    "ExpiresAt" timestamp with time zone NULL,
    "IsExpired" boolean NOT NULL DEFAULT FALSE,
    "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "CreatedById" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    "UpdatedAt" timestamp with time zone NULL,
    "UpdatedById" uuid NULL,
    "Version" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_ApiKeys" PRIMARY KEY ("Sid")
);

CREATE UNIQUE INDEX "IX_ApiKeys_Id" ON "ApiKeys" ("Id");

CREATE INDEX "IX_ApiKeys_IsExpired" ON "ApiKeys" ("IsExpired");

CREATE INDEX "IX_ApiKeys_Name" ON "ApiKeys" ("Name");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220727183538_CreateApiKeyTable', '6.0.7');

COMMIT;

START TRANSACTION;

CREATE TABLE "JwtBlacklist" (
    "Sid" bigint GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL,
    "ExpiresAt" timestamp with time zone NULL,
    CONSTRAINT "PK_JwtBlacklist" PRIMARY KEY ("Sid")
);

CREATE INDEX "IX_JwtBlacklist_ExpiresAt" ON "JwtBlacklist" ("ExpiresAt");

CREATE UNIQUE INDEX "IX_JwtBlacklist_Id" ON "JwtBlacklist" ("Id");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220728044832_CreateJwtBlacklistTable', '6.0.7');

COMMIT;
